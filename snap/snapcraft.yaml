name: hplip-printer-app
base: core20
version: '1.0'
summary: HPLIP Printer Application
description: |
  The HPLIP Printer Application is a PAPPL (Printer Application
  Framework) based Printer Application to support printers using the
  printer driver of HPLIP. Loading the proprietary plugin from HP is
  supported, support for scanning will be added later.

grade: stable
confinement: strict

# Only build on the architectures supported
architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf

# Make resolution of ".local" host names (Zero-Conf/mDNS/DNS-SD)
# working: Mirror nsswitch.conf with added mDNS look-up support into
# /etc/nsswitch.conf
# See: https://forum.snapcraft.io/t/how-can-i-lookup-host-name-from-snap-core-using-avahi-mdns/
layout:
  /etc/nsswitch.conf:
    bind-file: $SNAP/etc/nsswitch.conf

environment:
  MIBDIRS: /snap/hplip-printer-app/current/usr/share/snmp/mibs:/snap/hplip-printer-app/current/usr/share/snmp/mibs/iana:/snap/hplip-printer-app/current/usr/share/snmp/mibs/ietf

apps:
  hplip-printer-app-server:
    command: scripts/run-hplip-printer-app-server
    daemon: simple
    plugs: [avahi-control, home, network, network-bind, raw-usb, hardware-observe]
  hplip-printer-app:
    command: scripts/run-hplip-printer-app
    plugs: [avahi-control, home, network, network-bind, raw-usb]

parts:
  patches:
    plugin: dump
    source: snap/local/
    organize:
      '*.patch' : patches/
    override-prime: ""

  pappl:
    source: https://github.com/michaelrsweet/pappl
    source-type: git
    plugin: autotools
    override-build: |
      set -eux
      patch -p1 < $SNAPCRAFT_STAGE/patches/pappl-support-text-string-vendor-options.patch
      # Raise the supported number of vendor-specific options/attributes in
      # PAPPL to 256, as the original 32 can be too small for some busy PPD
      # files
      perl -p -i -e 's/(define\s+PAPPL_MAX_VENDOR\s+)32/\1 256/' pappl/printer.h
      # De-activate log-rotating. It does not work with the forked processes
      # of the filters
      perl -p -i -e 's/(system->logmaxsize\s+=).*/\1 0;/' pappl/system.c
      # As we do not use PAPPL's own backends but the CUPS backends using the
      # "cups" device scheme of pappl-retrofit, we let the manual "Network
      # Printer" device on the "Add Printer" page of the web interface use a
      # "cups:socket://..." URI instead of simply "socket://..."
      perl -p -i -e 's/(httpAssembleURI\(.*?)"socket"(.*?\))/\1"cups:socket"\2/' pappl/system-webif.c
      # PAPPL's build system does not insert the LDFLAGS when linking.
      # Patching Makedefs.in to fix this
      perl -p -i -e 's/^(\s*DSOFLAGS\s*=\s*\S*\s+)/\1\$\(LDFLAGS\) /' Makedefs.in
      snapcraftctl build
    autotools-configure-parameters:
      - --prefix=/usr
      - --with-papplstatedir=/var/snap/hplip-printer-app/common
      - --with-papplsockdir=/var/snap/hplip-printer-app/common/tmp
      - --enable-libjpeg
      - --enable-libpng
      - --enable-libusb
      - --with-dnssd=avahi
    build-packages:
      - libavahi-client-dev
      - libgnutls28-dev
      - libjpeg-dev
      - libpam0g-dev
      - libpng-dev
      - libusb-1.0-0-dev
      - zlib1g-dev
      - perl-base
    stage-packages:
      - libavahi-client3
      - libpng16-16
      - libusb-1.0-0
    prime:
      - -etc/fonts
      - -var
      - lib/*/lib*.so*
      - usr/lib/lib*.so*
      - usr/lib/*/lib*.so*
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - -snap
    after: [patches, cups]

  pappl-retrofit:
    source: https://github.com/openprinting/pappl-retrofit
    source-type: git
    plugin: autotools
    override-build: |
      set -eux
      patch -p1 < $SNAPCRAFT_STAGE/patches/support-new-pappl-string-options.patch
      snapcraftctl build
    autotools-configure-parameters:
      - --prefix=/usr
    build-packages:
      - autoconf
      - automake
      - libtool
      - autotools-dev
      - pkg-config
      - perl-base
    stage-packages:
      - libusb-1.0-0
    prime:
      - lib/*/lib*.so*
      - usr/lib/lib*.so*
      - usr/lib/*/lib*.so*
      - -var
      - -usr/bin/test-printer-app
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/lib/test-printer-app
      - -usr/share/
      - -snap
    after: [patches, cups, cups-filters, pappl]

  qpdf:
    source: https://github.com/qpdf/qpdf/releases/download/release-qpdf-10.3.2/qpdf-10.3.2.tar.gz
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/usr
    build-packages:
      - g++
      - zlib1g-dev
    stage-packages:
      - libjpeg-turbo8
    prime:
      - lib/*/lib*.so*
      - usr/lib/lib*.so*
      - usr/lib/*/lib*.so*
      - -etc/fonts
      - -var
      - -usr/include
      - -share/man
      - -share/doc
      - -share/lintian
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - -usr/lib/libqpdf.a
      - -usr/lib/libqpdf.la
      - -usr/lib/pkgconfig

  ghostscript:
    source: https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs9550/ghostscript-9.55.0.tar.gz
    plugin: autotools
    # We only need Raster and PostScript output
    autotools-configure-parameters:
      - --prefix=/usr
      - --without-x
      - --disable-gtk
      - --with-drivers=cups,pwgraster,ps2write
      - --enable-freetype
      - --without-tesseract
      - --datarootdir=/snap/hplip-printer-app/current/usr/share/
    stage-packages:
      - libpaper1
      - libfontconfig1
      - libfreetype6
      - libpng16-16
    prime:
      - usr/bin/gs
      - lib/*/lib*.so*
      - usr/lib/*/lib*.so*
      - usr/share/ghostscript
      - -etc/fonts
      - -var
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - -snap
    organize:
      snap/hplip-printer-app/current/usr/share: usr/share
    after: [cups]

  cups:
    source: https://github.com/OpenPrinting/cups
    source-type: git
    plugin: autotools
    # We only need libcups (with headers, ...) and the backends
    override-build: |
      set -eux
      patch -p1 < $SNAPCRAFT_STAGE/patches/cups-dnssd-backend-socket-only.patch
      ./configure --sysconfdir=/var/snap/hplip-printer-app/common/
      cd cups
      make
      cd ..
      cd backend
      # Have USB quirk files in user-modifiable space for debugging
      perl -p -i -e 's/"CUPS_DATADIR"/"USB_QUIRK_DIR"/' usb-libusb.c
      make snmp dnssd socket ipp ipps lpd usb
      cd ..
      cd ppdc
      make ppdc
      cd ..
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib
      cp cups/libcups*.a $SNAPCRAFT_PART_INSTALL/usr/lib/
      cp cups/libcups*.so* $SNAPCRAFT_PART_INSTALL/usr/lib/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/include/cups
      cp cups/*.h $SNAPCRAFT_PART_INSTALL/usr/include/cups/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/bin
      cp cups-config $SNAPCRAFT_PART_INSTALL/usr/bin/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib/hplip-printer-app/backend/
      ( cd backend; \
        cp snmp dnssd socket ipp ipps lpd usb org.cups.usb-quirks $SNAPCRAFT_PART_INSTALL/usr/lib/hplip-printer-app/backend/ \
      )
      cp conf/snmp.conf $SNAPCRAFT_PART_INSTALL/usr/lib/hplip-printer-app/backend/
    build-packages:
      - patch
      - gettext
      - autoconf
      - automake
      - libtool
      - autotools-dev
      - pkg-config
      - libavahi-client-dev
      - libavahi-common-dev
      - libavahi-compat-libdnssd-dev
      - libdbus-1-dev
      - libfontconfig1-dev
      - libfreetype6-dev
      - libgnutls28-dev
      - libjpeg-dev
      - libldap2-dev
      - libkrb5-dev
      - libpam0g-dev
      - libpaper-dev
      - libpng-dev
      - libusb-1.0-0-dev
      - perl-base
    stage-packages:
      - libusb-1.0-0
      - libavahi-common3
      - libavahi-client3
      - libicu66
      - libjson-glib-1.0-0
      - libsoup2.4-1
      - libxml2
    prime:
      - -etc/fonts
      - -var
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/cups
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - lib/*/lib*.so*
      - usr/lib/lib*.so*
      - usr/lib/*/lib*.so*
      - usr/lib/hplip-printer-app/backend/*
    after: [patches]

  cups-filters:
    source: https://github.com/OpenPrinting/cups-filters
    source-type: git
    plugin: autotools
    # We need the 3 libraries: libcupsfilters, libppd, and libfontembed, and
    # ppdc plus *.defs files (for HPLIP build to updated hpcups PPD files)
    override-build: |
      set -eux
      ./autogen.sh
      ./configure --disable-avahi --disable-ldap --disable-foomatic --disable-braille --disable-mutool --without-rcdir --with-pdftops-path=/snap/hplip-printer-app/current/usr/bin/pdftops
      make libppd.la
      make libcupsfilters.la
      make libfontembed.la
      make ppdc
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib
      cp .libs/lib* $SNAPCRAFT_PART_INSTALL/usr/lib/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/include/ppd
      cp ppd/*.h $SNAPCRAFT_PART_INSTALL/usr/include/ppd/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/include/cupsfilters
      cp cupsfilters/*.h $SNAPCRAFT_PART_INSTALL/usr/include/cupsfilters/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/include/fontembed
      cp fontembed/*.h $SNAPCRAFT_PART_INSTALL/usr/include/fontembed/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib/pkgconfig
      cp *.pc $SNAPCRAFT_PART_INSTALL/usr/lib/pkgconfig/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/bin
      cp .libs/ppdc $SNAPCRAFT_PART_INSTALL/usr/bin/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share/ppdc
      cp ppd/*.defs ppd/epson.h ppd/hp.h ppd/label.h $SNAPCRAFT_PART_INSTALL/usr/share/ppdc/
      cp filter/escp.h filter/pcl.h $SNAPCRAFT_PART_INSTALL/usr/share/ppdc/
    build-packages:
      - gettext
      - autoconf
      - automake
      - autotools-dev
      - pkg-config
      - g++
      - sharutils
      - poppler-utils
      - libglib2.0-dev
      - liblcms2-dev
      - libpoppler-cpp-dev
      - libpng-dev
      - libjpeg-dev
      - libtiff5-dev
      - zlib1g-dev
      - libfontconfig1-dev
      - libdbus-1-dev
      - librsvg2-bin
    stage-packages:
      - poppler-utils
      - libpoppler-cpp0v5
      - libjbig0
      - liblcms2-2
      - libnspr4
      - libnss3
      - libopenjp2-7
      - libpoppler97
      - libtiff5
      - libwebp6
    prime:
      - -etc/fonts
      - -var
      - -usr/bin/ppdc
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - lib/*/lib*.so*
      - usr/lib/lib*.so*
      - usr/lib/*/lib*.so*
      - usr/lib/*/nss
      - usr/bin/pdftops
      - usr/share/ppdc/*
    after: [cups, qpdf, ghostscript]

  pyppd:
    source: https://github.com/OpenPrinting/pyppd
    source-type: git
    plugin: python
    override-prime: ""

  hplip:
    # We use the Debian package source instead of the upstream source code
    # of HPLIP as the Debian package has ~80 patches fixing bugs which are
    # reported upstream but the patches not adopted upstream.
    # This way we should have the same user experience in terms of reliability
    # and quality as with the Debian package.
    # Note that the repository has all patches already applied, so we do
    # not need to apply them before building.
    # Debian source
    source: https://salsa.debian.org/printing-team/hplip.git
    source-type: git
    source-branch: debian/3.21.8+dfsg0-2
    # Upstream source
    #source: https://sourceforge.net/projects/hplip/files/hplip/3.21.8/hplip-3.21.8.tar.gz
    plugin: autotools
    build-environment:
      - PYTHON: python3
      - LD_LIBRARY_PATH: $SNAPCRAFT_STAGE/usr/lib:$LD_LIBRARY_PATH
      - CUPS_DATADIR: $SNAPCRAFT_STAGE/usr/share/cups
      - PPDC_DATADIR: $SNAPCRAFT_STAGE/usr/share/ppdc
      # Disable ImageProcesssor (for Debian source)
      - IMAGEPROC: disable
      # ImageProcessor oly on amd64 (for upstream source)
      #- on amd64:
      #  - IMAGEPROC: enable
      #- else:
      #  - IMAGEPROC: disable
      - on arm64:
        - BUILDARCH: aarch64-unknown-linux-gnu
      - else:
        - BUILDARCH: $SNAPCRAFT_ARCH_TRIPLET
    # Paremeter list here only needed for upstream source, but no need to
    # comment out for Debian source
    autotools-configure-parameters:
      - --build=$BUILDARCH
      - --prefix=/usr
      - --disable-foomatic-rip-hplip-install
      - --without-docdir
      - --without-htmldir
      - --with-hpppddir=/usr/share/ppd/hplip/HP
      - --without-drvdir
      - --without-icondir
      - --enable-hpcups-install
      - --disable-cups-drv-install
      - --enable-cups-ppd-install
      - --disable-hpijs-install
      - --disable-foomatic-drv-install
      - --disable-foomatic-ppd-install
      - --$IMAGEPROC-imageProcessor-build
      - --enable-network-build
      - --disable-class-driver
      - --disable-scan-build
      - --disable-gui-build
      - --disable-fax-build
      - --disable-qt3
      - --disable-qt4
      - --disable-qt5
      - --disable-policykit
    # We need the PostScript and hpcups PPDs, the hpps and hpcups filters,
    # the hp backend, and the hp-probe utility
    override-build: |
      set -eux
      # Correct hard-coded /etc/hp/ path in Makefile
      perl -p -i -e 's:/etc/hp:/snap/hplip-printer-app/current/etc/hp:' Makefile*
      # Remove hard-coded linking of binary-only libImageProcessor
      # in Makefile for non-amd64 architectures (for upstream source)
      #if echo $SNAPCRAFT_ARCH_TRIPLET | grep -qv x86_64; then
      #  perl -p -i -e 's: -lImageProcessor::' Makefile*
      #fi
      # Do the "./configure" (for Debian source)
      sh debian/autogen.sh
      ./configure \
        --build=$BUILDARCH \
        --prefix=/usr \
        --disable-foomatic-rip-hplip-install \
        --without-docdir \
        --without-htmldir \
        --with-hpppddir=/usr/share/ppd/hplip/HP \
        --without-drvdir \
        --without-icondir \
        --enable-hpcups-install \
        --disable-cups-drv-install \
        --enable-cups-ppd-install \
        --disable-hpijs-install \
        --disable-foomatic-drv-install \
        --disable-foomatic-ppd-install \
        --$IMAGEPROC-imageProcessor-build \
        --enable-network-build \
        --disable-class-driver \
        --disable-scan-build \
        --disable-gui-build \
        --disable-fax-build \
        --disable-qt3 \
        --disable-qt4 \
        --disable-qt5 \
        --disable-policykit
      # Following step needed because of the Debian patches (for Debian source)
      # Compress various files before building, they are needed for the build,
      # and were compressed in the non-repacked upstream tarballs
      find . -name '*.ppd' | xargs gzip -f
      find data/ -regextype posix-extended -regex '.*\.(ldl|pcl|ps|pdf)' | xargs gzip -f
      # Following step needed because of the Debian patches (for Debian source)
      # Rebuild the .drv.in files from drv.in.template
      python3 ./dat2drv.py
      # Correct hard-coded paths in C/C++ source code
      # The /etc/... and /usr/... paths in these files do not need to get
      # corrected, only the /var/... ones
      perl -p -i -e 's:\"/var/lib/hp:\"/var/snap/hplip-printer-app/common/var/:' common/utils.[ch]
      # Set path for dynamic link libraries of the proprietary plugin
      # We have to apply this patch here as patches on the C/C++ code need
      # to get applied before compiling
      patch -p0 < $SNAPCRAFT_STAGE/patches/hplip-plugin-library-load-path.patch
      # Do the "./configure; make; make install" (for upstream source)
      # snapcraftctl build
      # Do the "make; make install" (for Debian source)
      make
      make DESTDIR=$SNAPCRAFT_PART_INSTALL install
      # Correct hard-coded paths in hplip.conf
      ( cd $SNAPCRAFT_PART_INSTALL/snap/hplip-printer-app/current/etc/hp; \
        perl -p -i -e 's:/var/:/var/snap/hplip-printer-app/common/var/:' hplip.conf; \
        perl -p -i -e 's:/usr/share/:/snap/hplip-printer-app/current/usr/share/:' hplip.conf; \
        perl -p -i -e 's:/usr/share/ppd/hplip:/usr/share/ppd:' hplip.conf; \
        perl -p -i -e 's:/usr/share/ppd/HP:/usr/share/ppd:' hplip.conf; \
        perl -p -i -e 's:/usr/lib/cups/:/snap/hplip-printer-app/current/usr/lib/hplip-printer-app/:' hplip.conf; \
      )
      # Correct hard-coded /var and /etc paths in the utilities written in
      # Python
      ( cd $SNAPCRAFT_PART_INSTALL/usr/share/hplip/
        perl -p -i -e 's:/var/(\S+)/hp:/var/snap/hplip-printer-app/common/var/\1/hp:' *.py */*.py */*/*.py
        perl -p -i -e 's:/var/lib/hp:/var:' *.py */*.py */*/*.py
        perl -p -i -e 's:/etc/hp:/snap/hplip-printer-app/current/etc/hp:' *.py */*.py */*/*.py
        # Set path for firmware files of the proprietary plugin
        # We have to apply this patch here so that the global corrections done
        # right above do not mess it up
        patch -p0 < $SNAPCRAFT_STAGE/patches/hplip-plugin-firmware-load-path.patch
      )
      # Correct Python shebang in the utilities
      ( cd $SNAPCRAFT_PART_INSTALL; \
        for file in usr/bin/hp-*; do \
          perl -p -i -e 's:^\s*\#\!\s*/usr/bin/env\s+python.*:#!/snap/hplip-printer-app/current/usr/bin/python3:' `readlink -f $file`; \
        done; \
      )
      # "make install" install Python extension modules to the wrong place
      # (for Debian source)
      rm $SNAPCRAFT_PART_INSTALL/usr/lib/python*/site-packages/*.la
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages
      mv $SNAPCRAFT_PART_INSTALL/usr/lib/python*/site-packages/*.so $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages
      # "make install" misses to install the PostScript PPD files, do it now
      # (for Debian source)
      cp prnt/ps/*.ppd.gz $SNAPCRAFT_PART_INSTALL/usr/share/ppd/hplip/HP/
      # Handle the PPD files: Unzip, remove "(recommended)" (we have only
      # HPLIP here, no other driver), compress into self-extracting archive
      ( cd $SNAPCRAFT_PART_INSTALL/usr/share/ppd/hplip/HP/; \
        find . -name '*.gz' | xargs gunzip -f; \
        for file in `find . -name '*.ppd'`; do \
          perl -p -i -e 's/(\*NickName:.*\S+)\s*\(recommended\)/\1/' $file; \
        done; \
        PYTHONPATH=$SNAPCRAFT_STAGE/lib/python3.8/site-packages $SNAPCRAFT_STAGE/bin/pyppd -v -o hplip-ppds .; \
        mv hplip-ppds ../..; \
        cd ../..; \
        rm -rf hplip; \
      )
      # Link Python 3 to the "python" executable name (no older Python in this
      # Snap and everything needs Python 3)
      ln -sf python3 $SNAPCRAFT_PART_INSTALL/usr/bin/python
      # Install the binary-only libImageProcessor only if we build the Snap for
      # amd64 (x86_64) (for upstream source)
      #if echo $SNAPCRAFT_ARCH_TRIPLET | grep -q x86_64; then
      #  cp prnt/hpcups/libImageProcessor-x86_64.so $SNAPCRAFT_PART_INSTALL/usr/lib/libImageProcessor.so
      #fi
      # Install the public key for verifying the signature of the proprietary
      # plugin (for Debian source)
      cp debian/upstream/signing-key.asc $SNAPCRAFT_PART_INSTALL/usr/share/hplip/
    build-packages:
      - ubuntu-dev-tools
      - dpkg-dev
      - fakeroot
      - automake
      - gawk
      - python3-dev
      - libpython3-dev
      - fdupes
      - libavahi-client-dev
      - libavahi-core-dev
      - libdbus-1-dev
      - libjpeg-dev
      - libsnmp-dev
      - libssl-dev
      - libtool
      - libudev-dev
      - libusb-1.0-0-dev
      - perl-base
      - python3
      - xz-utils
    stage-packages:
      - python3
      - python3-minimal
      - python3.8
      - python3.8-minimal
      - python3-dbus
      - python3-distro
      - python3-gi
      - python3-pexpect
      - python3-pil
      - python3-reportlab
      - libpython3.8
      - libpython3.8-stdlib
      - wget
      - xz-utils
      - avahi-utils
      - libsnmp35
      - libsnmp-base
    organize:
      usr/lib/cups/filter/hpcups: usr/lib/hplip-printer-app/filter/hpcups
      usr/lib/cups/filter/hpps: usr/lib/hplip-printer-app/filter/hpps
      usr/lib/cups/backend/hp: usr/lib/hplip-printer-app/backend/hp
      snap/hplip-printer-app/current/etc: etc
    prime:
      - etc/hp
      - -var
      - usr/bin
      - -usr/bin/pdb*
      - -usr/bin/py*versions
      - lib/*/lib*.so*
      - usr/lib/lib*.so*
      - usr/lib/*/lib*.so*
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - usr/share/hplip
      - usr/share/ppd
      - usr/share/snmp
      - usr/lib/hplip-printer-app
      - -usr/lib/cups
    after: [cups, patches, pyppd]

  hplip-printer-app:
    plugin: make
    source: .
    make-parameters:
      - LDFLAGS="$LDFLAGS -ljpeg"
      - SNAP=1
      - HPLIP_CONF_DIR=/snap/hplip-printer-app/current/etc/hp
      - HPLIP_PLUGIN_STATE_DIR=/var/snap/hplip-printer-app/common/var
      - HPLIP_PLUGIN_ALT_DIR=/var/snap/hplip-printer-app/common
    # To improve convenience for developers (and everyone who wants to
    # build from source), we do a "make clean" before "make" here,
    # because if we had done "make" off-Snap, directly in the source
    # tree, and afterwards build the Snap with snapcraft, the build
    # sucks in our local binary of hplip-printer-app instead of
    # compiling its own one in the Snap harness with the appropriate
    # libraries, ending up with the Snap containing an executable
    # which does not work inside the Snap. The "make clean" removes
    # any accidentally grabbed binary.
    override-build: |
      set -eux
      make clean
      snapcraftctl build
    build-packages:
      - libusb-1.0-0-dev
      - libcurl4-gnutls-dev
      - libssl-dev
      - libjpeg-dev
    stage-packages:
      - libusb-1.0-0
      - libjbig0
      - liblcms2-2
      - libtiff5
      - libwebp6
      - libcurl3-gnutls
      - libssl1.1
      - libasn1-8-heimdal
      - libgssapi3-heimdal
      - libhcrypto4-heimdal
      - libheimbase1-heimdal
      - libheimntlm0-heimdal
      - libhx509-5-heimdal
      - libkrb5-26-heimdal
      - libldap-2.4-2
      - libnghttp2-14
      - libroken18-heimdal
      - librtmp1
      - libsasl2-2
      - libssh-4
      - libwind0-heimdal
      - gpg
      - gpg-agent
    stage:
      - -usr/lib/hplip-printer-app
    prime:
      - usr/bin/hplip-printer-app
      - lib/*/lib*.so*
      - usr/lib/*/lib*.so*
      - usr/share/hplip-printer-app
      - usr/bin/gpg*
      - usr/lib/gnupg*
      - usr/lib/sasl*
      - usr/lib/python*
      - -var
      - -usr/var
      - -usr/share/man
    after: [pappl-retrofit, pappl, cups, cups-filters, hplip]

  mdns-lookup:
    # Make resolution of ".local" host names (Zero-Conf/mDNS/DNS-SD)
    # working: Take the original nsswitch.conf file from the base
    # Snap and add "mdns4_minimal [NOTFOUND=return]" to its "hosts:" line
    # Also install corresponding mdns4_minimal plug-in
    # See: https://forum.snapcraft.io/t/no-mdns-support-in-snaps-should-core-have-a-modified-nsswitch-conf/
    plugin: nil
    stage-packages:
      - libnss-mdns
    override-prime: |
      set -eux
      sed -Ee 's/^\s*hosts:(\s+)files/hosts:\1files mdns4_minimal \[NOTFOUND=return\]/' /snap/core20/current/etc/nsswitch.conf > $SNAPCRAFT_STAGE/etc/nsswitch.conf
      snapcraftctl prime
    prime:
      - -var
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - lib/$SNAPCRAFT_ARCH_TRIPLET/libnss_mdns4_minimal*
      - etc/nsswitch.conf

  scripts:
    plugin: dump
    source: .
    organize:
      # Startup wrapper scripts
      snap/local/run-hplip-printer-app*: scripts/
      # "HP" discovery-only CUPS backendto discover
      # network printers using the hp-probe utility, as
      # HPLIP's "hp" backend only discovers USB printers
      HP: usr/lib/hplip-printer-app/backend/HP
    stage-packages:
      - udev
    prime:
      - -etc
      - bin
      - -bin/systemd-hwdb
      - -lib
      - scripts/
      - usr/lib/hplip-printer-app/backend/
      - -usr/lib/tmpfiles.d
    after: [hplip-printer-app]
